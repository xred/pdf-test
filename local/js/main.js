// Generated by CoffeeScript 1.6.3
(function() {
  var App, FullCommentItem, Page, RightSection, pdfUrl,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    _this = this;

  console.log("run");

  pdfUrl = null;

  App = (function(_super) {
    __extends(App, _super);

    function App() {
      var am, tm,
        _this = this;
      App.__super__.constructor.apply(this, arguments);
      am = new Suzaku.ApiManager;
      am.setPath("");
      tm = new Suzaku.TemplateManager;
      tm.setPath("templates/");
      tm.use("full-comment-item");
      tm.start(function(tpls) {
        window.tpls = tpls;
        return _this.start();
      });
    }

    App.prototype.start = function() {
      var p, pages, _i, _len, _ref,
        _this = this;
      this.pages = [];
      _ref = pages = $(".page");
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        this.pages.push(new Page(this, p));
      }
      this.rightSection = new RightSection();
      return $("#new-comment").on("click", function() {
        return _this.emit("newComment");
      });
    };

    return App;

  })(Suzaku.EventEmitter);

  RightSection = (function(_super) {
    __extends(RightSection, _super);

    function RightSection() {
      var i, item, _i;
      RightSection.__super__.constructor.call(this, "#right-section");
      for (i = _i = 1; _i <= 5; i = ++_i) {
        item = new FullCommentItem();
        item.appendTo(this.UI['comments-wrapper']);
      }
    }

    return RightSection;

  })(Suzaku.Widget);

  FullCommentItem = (function(_super) {
    __extends(FullCommentItem, _super);

    function FullCommentItem(data) {
      FullCommentItem.__super__.constructor.call(this, window.tpls['full-comment-item']);
    }

    return FullCommentItem;

  })(Suzaku.Widget);

  Page = (function(_super) {
    __extends(Page, _super);

    function Page(app, pageContainerDom) {
      var id,
        _this = this;
      Page.__super__.constructor.call(this, pageContainerDom);
      id = this.dom.id.replace("pageContainer", "");
      this.markingWrapper = new Suzaku.Widget("<div class='marking-wrapper'></div>");
      this.markingWrapper.appendTo(this.dom);
      this.textLayerJ = this.J.find('.textLayer');
      this.marks = [];
      app.on("newComment", function() {
        return _this.newCommentActive();
      });
      app.on("newCommentCompleted", function() {
        return _this.clearListeners();
      });
    }

    Page.prototype.clearListeners = function() {
      this.dom.onmouseup = null;
      this.dom.onmousedown = null;
      return this.dom.onmousemove = null;
    };

    Page.prototype.newCommentActive = function() {
      var _this = this;
      this.dom.onmousedown = function(evt) {
        var r, x, y;
        evt.preventDefault();
        _this.textLayerJ = _this.J.find('.textLayer');
        r = _this.textLayerJ[0].getBoundingClientRect();
        x = evt.clientX - r.left;
        y = evt.clientY - r.top;
        _this.mouseStartPos = {
          x: x,
          y: y
        };
        _this.tempRectMark = new Suzaku.Widget("<div class='tempRectMark rectMark'></div>");
        _this.tempRectMark.J.css({
          left: x,
          top: y
        });
        return _this.tempRectMark.appendTo(_this.markingWrapper);
      };
      this.dom.onmouseup = function(evt) {
        if (!_this.mouseStartPos) {
          return false;
        }
        _this.mouseStartPos = null;
        _this.clearListeners();
        return _this.confirmNewComment();
      };
      return this.dom.onmousemove = function(evt) {
        var height, left, r, sp, top, width, x, y;
        if (!_this.mouseStartPos) {
          return false;
        }
        r = _this.textLayerJ[0].getBoundingClientRect();
        x = evt.clientX - r.left;
        y = evt.clientY - r.top;
        sp = _this.mouseStartPos;
        if (y < sp.y) {
          top = y;
        } else {
          top = sp.y;
        }
        if (x < sp.x) {
          left = x;
        } else {
          left = sp.x;
        }
        width = Math.abs(x - sp.x);
        height = Math.abs(y - sp.y);
        return _this.tempRectMark.J.css({
          left: left,
          top: top,
          width: width,
          height: height
        });
      };
    };

    Page.prototype.confirmNewComment = function() {};

    return Page;

  })(Suzaku.Widget);

  RunPDFViewer(pdfUrl, function() {
    return new App();
  });

}).call(this);
