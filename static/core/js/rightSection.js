// Generated by CoffeeScript 1.6.3
(function() {
  var CommentsItem, EditPage, RightSectionPage, SingleCommentPage, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  RightSectionPage = (function(_super) {
    var animateRate;

    __extends(RightSectionPage, _super);

    function RightSectionPage() {
      _ref = RightSectionPage.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    animateRate = "normal";

    RightSectionPage.prototype.init = function() {
      return true;
    };

    RightSectionPage.prototype.enterFromRight = function() {
      this.emit("enter");
      this.J.css({
        "z-index": 9,
        left: "110%",
        display: "block"
      });
      return this.J.animate({
        left: "0"
      }, animateRate);
    };

    RightSectionPage.prototype.enterFromLeft = function() {
      var _this = this;
      this.emit("enter");
      this.J.css({
        left: "-110%",
        display: "block"
      });
      return this.J.animate({
        left: "0"
      }, animateRate, function() {
        return _this.J.css({
          "z-index": 9
        });
      });
    };

    RightSectionPage.prototype.leaveToLeft = function() {
      var _this = this;
      this.emit("leave");
      this.J.css({
        "z-index": 1,
        left: "0"
      });
      return this.J.animate({
        left: "-110%"
      }, animateRate, function() {
        return _this.J.hide();
      });
    };

    RightSectionPage.prototype.leaveToRight = function() {
      var _this = this;
      this.emit("leave");
      this.J.css({
        left: "0"
      });
      return this.J.animate({
        left: "110%"
      }, animateRate, function() {
        _this.J.css({
          "z-index": 1
        });
        return _this.J.hide();
      });
    };

    return RightSectionPage;

  })(Suzaku.Widget);

  EditPage = (function(_super) {
    __extends(EditPage, _super);

    function EditPage() {
      _ref1 = EditPage.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    EditPage.prototype.init = function(type, inputData) {
      switch (type) {
        case "newComment":
          this.UI['new-comment-options'].J.show();
          break;
        default:
          this.UI['new-comment-options'].J.hide();
      }
      return CKEDITOR.instances.editPageEditor.setData(inputData);
    };

    return EditPage;

  })(RightSectionPage);

  SingleCommentPage = (function(_super) {
    __extends(SingleCommentPage, _super);

    function SingleCommentPage(target) {
      target.J.html(window.tpls['single-comment-item']);
      SingleCommentPage.__super__.constructor.call(this, target);
    }

    SingleCommentPage.prototype.init = function(commentData) {
      return null;
    };

    return SingleCommentPage;

  })(RightSectionPage);

  window.RightSection = (function(_super) {
    __extends(RightSection, _super);

    function RightSection(app) {
      RightSection.__super__.constructor.call(this, "#right-section");
      this.app = app;
      this.pages = [];
      this.pageStack = [];
      this.init();
    }

    RightSection.prototype.init = function() {
      var i, item, _i;
      this.commentPage = new RightSectionPage(this.UI['comment-page']);
      this.editPage = new EditPage(this.UI['edit-page']);
      this.singleCommentPage = new SingleCommentPage(this.UI['single-comment-page']);
      this.pages = [this.commentPage, this.editPage, this.singleCommentPage];
      for (i = _i = 1; _i <= 5; i = ++_i) {
        item = new CommentsItem(this, []);
        item.appendTo(this.UI['comments-wrapper']);
      }
      return this.goInto(this.commentPage);
    };

    RightSection.prototype.goInto = function(page) {
      var last;
      last = this.pageStack[this.pageStack.length - 1];
      if (last) {
        last.leaveToLeft();
      }
      this.pageStack.push(page);
      return page.enterFromRight();
    };

    RightSection.prototype.goBack = function() {
      var current;
      current = this.pageStack.pop();
      if (!current) {
        console.error("no page to go back");
        return false;
      }
      current.leaveToRight();
      return this.pageStack[this.pageStack.length - 1].enterFromLeft();
    };

    RightSection.prototype.showNewCommentHint = function() {
      var contentJ, hintJ,
        _this = this;
      hintJ = this.UI['new-comment-hint'].J;
      contentJ = hintJ.find(".content");
      hintJ.show();
      contentJ.slideDown("fast");
      return this.UI['new-comment-cancel-btn'].onclick = function() {
        _this.hideNewCommentHint();
        return _this.app.newCommentCanceled();
      };
    };

    RightSection.prototype.hideNewCommentHint = function() {
      var contentJ, hintJ,
        _this = this;
      hintJ = this.UI['new-comment-hint'].J;
      contentJ = hintJ.find(".content");
      return contentJ.slideUp("fast", function() {
        return hintJ.hide();
      });
    };

    RightSection.prototype.showEditPage = function(type, inputData, success, fail) {
      var _this = this;
      this.editPage.init(type, inputData);
      this.UI['edit-accept-btn'].onclick = function() {
        var content;
        content = CKEDITOR.instances.editPageEditor.getData();
        success(content);
        return _this.goBack();
      };
      this.UI['edit-cancel-btn'].onclick = function() {
        fail();
        return _this.goBack();
      };
      return this.goInto(this.editPage);
    };

    RightSection.prototype.showSingleComment = function(commentData) {
      var _this = this;
      this.singleCommentPage.init(commentData);
      this.singleCommentPage.UI['back'].onclick = function() {
        return _this.goBack();
      };
      return this.goInto(this.singleCommentPage);
    };

    return RightSection;

  })(Suzaku.Widget);

  CommentsItem = (function(_super) {
    __extends(CommentsItem, _super);

    function CommentsItem(rightSection, comments) {
      var c, first, _i, _len, _ref2,
        _this = this;
      CommentsItem.__super__.constructor.call(this, window.tpls['comments-item']);
      this.rightSection = rightSection;
      this.comments = comments = [1, 2, 3, 4, 5, 6, 7, 8];
      this.toggleItems = [];
      this.unfoldBtn = null;
      this.folded = true;
      if (this.comments.length > 3) {
        first = this.addItem(this.comments[0]);
        this.insertUnfoldBtn(first);
        this.addItem(this.comments[this.comments.length - 1]);
        this.UI['fold'].onclick = function() {
          return _this.fold();
        };
      } else {
        _ref2 = this.comments;
        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
          c = _ref2[_i];
          this.addItem(c);
        }
      }
    }

    CommentsItem.prototype.fold = function() {
      var i, item, _i, _len, _ref2;
      if (this.folded) {
        return false;
      }
      this.UI['fold'].J.fadeOut("fast");
      this.unfoldBtn.J.fadeIn("fast");
      _ref2 = this.toggleItems;
      for (i = _i = 0, _len = _ref2.length; _i < _len; i = ++_i) {
        item = _ref2[i];
        item.remove();
        this.toggleItems[i] = null;
      }
      this.toggleItems = [];
      return this.folded = true;
    };

    CommentsItem.prototype.unfold = function() {
      var c, i, item, _i, _len, _ref2;
      if (!this.folded) {
        return false;
      }
      this.UI['fold'].J.fadeIn("fast");
      this.unfoldBtn.J.hide();
      _ref2 = this.comments;
      for (i = _i = 0, _len = _ref2.length; _i < _len; i = ++_i) {
        c = _ref2[i];
        if (!(i > 0 && i < (this.comments.length - 1))) {
          continue;
        }
        item = this.addItem(c, true);
        this.toggleItems.push(item);
      }
      return this.folded = false;
    };

    CommentsItem.prototype.addItem = function(data, animate) {
      var item,
        _this = this;
      if (animate == null) {
        animate = false;
      }
      item = new Suzaku.Widget(this.UI['single-comment-li-tpl'].J.html());
      item.data = data;
      item.dom.onclick = function() {
        return _this.rightSection.showSingleComment(item.data);
      };
      item.appendTo(this.UI.list);
      return item;
    };

    CommentsItem.prototype.insertUnfoldBtn = function(target) {
      var item,
        _this = this;
      item = new Suzaku.Widget(this.UI['unfold-btn-tpl'].J.html());
      item.dom.onclick = function() {
        return _this.unfold();
      };
      item.after(target);
      item.UI['num'].J.text(this.comments.length - 2);
      return this.unfoldBtn = item;
    };

    return CommentsItem;

  })(Suzaku.Widget);

}).call(this);
